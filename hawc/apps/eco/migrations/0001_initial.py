# Generated by Django 3.1.3 on 2020-11-27 16:14

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Cause",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "term",
                    models.CharField(
                        choices=[("TBD", "TBD")], max_length=100, verbose_name="Cause term"
                    ),
                ),
                (
                    "measure",
                    models.CharField(
                        choices=[("TBD", "TBD")], max_length=100, verbose_name="Cause measure"
                    ),
                ),
                (
                    "measure_detail",
                    models.TextField(blank=True, verbose_name="Cause measure detail"),
                ),
                (
                    "species",
                    models.CharField(
                        blank=True,
                        help_text="Type the species name, if applicable; use the format Common name (Latin binomial)",
                        max_length=100,
                        verbose_name="Cause species",
                    ),
                ),
                (
                    "units",
                    models.CharField(
                        help_text="Type the unit associated with the cause term",
                        max_length=100,
                        verbose_name="Cause units",
                    ),
                ),
                (
                    "trajectory",
                    models.CharField(
                        choices=[
                            ("Increase", "Increase"),
                            ("Decrease", "Decrease"),
                            ("Change", "Change"),
                            ("Other", "Other"),
                        ],
                        help_text="Select qualitative description of how the cause measure changes, if applicable",
                        max_length=100,
                        verbose_name="Cause trajectory",
                    ),
                ),
                (
                    "comment",
                    models.TextField(
                        blank=True,
                        help_text="Type any other useful information not captured in other fields",
                        verbose_name="Cause comment",
                    ),
                ),
                (
                    "as_reported",
                    models.TextField(
                        help_text="Copy and paste 1-2 sentences from article",
                        verbose_name="Cause as reported",
                    ),
                ),
            ],
            options={"verbose_name": "Cause/Treatment",},
        ),
        migrations.CreateModel(
            name="Climate",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "climate",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Temperate", "Temperate"),
                            ("Tropical/subtropical", "Tropical/subtropical"),
                            ("Dry", "Dry"),
                            ("Arctic/subarctic", "Arctic/subarctic"),
                            ("Alpine", "Alpine"),
                            ("Not specified", "Not specified"),
                        ],
                        help_text="Select one or more climates to which the evidence applies",
                        max_length=100,
                        verbose_name="Climate",
                    ),
                ),
            ],
            options={"verbose_name": "Climate",},
        ),
        migrations.CreateModel(
            name="Country",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        choices=[
                            ("United States", "United States"),
                            ("Afghanistan", "Afghanistan"),
                            ("Albania", "Albania"),
                            ("Algeria", "Algeria"),
                            ("American Somoa", "American Somoa"),
                            ("Andorra", "Andorra"),
                            ("Angola", "Angola"),
                            ("Anguilla", "Anguilla"),
                            ("Antarctica", "Antarctica"),
                            ("Antigua and Barbuda", "Antigua and Barbuda"),
                            ("Argentina", "Argentina"),
                            ("Armenia", "Armenia"),
                            ("Aruba", "Aruba"),
                            ("Australia", "Australia"),
                            ("Austria", "Austria"),
                            ("Azerbaijjan", "Azerbaijjan"),
                            ("Bahamas", "Bahamas"),
                            ("Bahrain", "Bahrain"),
                            ("Bangladesh", "Bangladesh"),
                            ("Barbados", "Barbados"),
                            ("Belarus", "Belarus"),
                            ("Belgium", "Belgium"),
                            ("Belize", "Belize"),
                            ("Benin", "Benin"),
                            ("Bermuda", "Bermuda"),
                            ("Bhutan", "Bhutan"),
                            ("Bolivia", "Bolivia"),
                            ("Bosnia and Herzegovina", "Bosnia and Herzegovina"),
                            ("Botswana", "Botswana"),
                            ("Brazil", "Brazil"),
                            ("British Virgin Islands", "British Virgin Islands"),
                            ("Brunei Darussalam", "Brunei Darussalam"),
                            ("Bulgaria", "Bulgaria"),
                            ("Burkina Faso", "Burkina Faso"),
                            ("Burundi", "Burundi"),
                            ("Cambodia", "Cambodia"),
                            ("Cameroon", "Cameroon"),
                            ("Canada", "Canada"),
                            ("Cape Verde", "Cape Verde"),
                            ("Cayman Islands", "Cayman Islands"),
                            ("Central African Republic", "Central African Republic"),
                            ("Chad", "Chad"),
                            ("Chile", "Chile"),
                            ("China", "China"),
                            ("Colombia", "Colombia"),
                            ("Comoros", "Comoros"),
                            ("Congo", "Congo"),
                            ("Cook Islands", "Cook Islands"),
                            ("Costa Rica", "Costa Rica"),
                            ("Cote d'Ivoire", "Cote d'Ivoire"),
                            ("Croatia", "Croatia"),
                            ("Cuba", "Cuba"),
                            ("Cyprus", "Cyprus"),
                            ("Czech Republic", "Czech Republic"),
                            ("Democratic Republic of Congo", "Democratic Republic of Congo"),
                            ("Denmark", "Denmark"),
                            ("Djibouti", "Djibouti"),
                            ("Dominica", "Dominica"),
                            ("Dominican Republic", "Dominican Republic"),
                            ("East Timor", "East Timor"),
                            ("Ecuador", "Ecuador"),
                            ("Egypt", "Egypt"),
                            ("El Salvador", "El Salvador"),
                            ("Equatorial Guinea", "Equatorial Guinea"),
                            ("Eritrea", "Eritrea"),
                            ("Estonia", "Estonia"),
                            ("Ethiopia", "Ethiopia"),
                            ("Falkland Islands", "Falkland Islands"),
                            ("Faroe Islands", "Faroe Islands"),
                            ("Fiji", "Fiji"),
                            ("Finland", "Finland"),
                            ("France", "France"),
                            ("French Guiana", "French Guiana"),
                            ("French Polynesia", "French Polynesia"),
                            ("Gabon", "Gabon"),
                            ("Gambia", "Gambia"),
                            ("Georgia", "Georgia"),
                            ("Germany", "Germany"),
                            ("Ghana", "Ghana"),
                            ("Gibraltar", "Gibraltar"),
                            ("Greece", "Greece"),
                            ("Greenland", "Greenland"),
                            ("Grenada", "Grenada"),
                            ("Guadeloupe", "Guadeloupe"),
                            ("Guam", "Guam"),
                            ("Guatemala", "Guatemala"),
                            ("Guinea", "Guinea"),
                            ("Guinea Bissau", "Guinea Bissau"),
                            ("Guyana", "Guyana"),
                            ("Haiti", "Haiti"),
                            ("Honduras", "Honduras"),
                            ("Hungary", "Hungary"),
                            ("Iceland", "Iceland"),
                            ("India", "India"),
                            ("Indonesia", "Indonesia"),
                            ("Iran", "Iran"),
                            ("Iraq", "Iraq"),
                            ("Ireland", "Ireland"),
                            ("Israel", "Israel"),
                            ("Italy", "Italy"),
                            ("Jamaica", "Jamaica"),
                            ("Japan", "Japan"),
                            ("Jordan", "Jordan"),
                            ("Kazakhstan", "Kazakhstan"),
                            ("Kenya", "Kenya"),
                            ("Kiribati", "Kiribati"),
                            ("Kuwait", "Kuwait"),
                            ("Kyrgyzstan", "Kyrgyzstan"),
                            ("Laos", "Laos"),
                            ("Latvia", "Latvia"),
                            ("Lebanon", "Lebanon"),
                            ("Lesotho", "Lesotho"),
                            ("Liberia", "Liberia"),
                            ("Libya", "Libya"),
                            ("Liechtenstein", "Liechtenstein"),
                            ("Lithuania", "Lithuania"),
                            ("Luxembourg", "Luxembourg"),
                            ("Macau", "Macau"),
                            ("Macedonia", "Macedonia"),
                            ("Madagascar", "Madagascar"),
                            ("Malawi", "Malawi"),
                            ("Malaysia", "Malaysia"),
                            ("Maldives", "Maldives"),
                            ("Mali ", "Mali "),
                            ("Malta", "Malta"),
                            ("Marshall Islands", "Marshall Islands"),
                            ("Martinique", "Martinique"),
                            ("Mauritania", "Mauritania"),
                            ("Mauritius", "Mauritius"),
                            ("Mayotte", "Mayotte"),
                            ("Mexico", "Mexico"),
                            ("Micronesia", "Micronesia"),
                            ("Moldova", "Moldova"),
                            ("Monaco", "Monaco"),
                            ("Mongolia", "Mongolia"),
                            ("Montserrat", "Montserrat"),
                            ("Morroco", "Morroco"),
                            ("Mozambique", "Mozambique"),
                            ("Myanmar", "Myanmar"),
                            ("Namibia", "Namibia"),
                            ("Nauru", "Nauru"),
                            ("Nepal", "Nepal"),
                            ("Netherlands", "Netherlands"),
                            ("Netherlands Antilles", "Netherlands Antilles"),
                            ("New Caledonia", "New Caledonia"),
                            ("New Zealand", "New Zealand"),
                            ("Nicaragua", "Nicaragua"),
                            ("Niger", "Niger"),
                            ("Nigeria", "Nigeria"),
                            ("Niue", "Niue"),
                            ("Norfolk Island", "Norfolk Island"),
                            ("North Korea", "North Korea"),
                            ("Northern Mariana Islands", "Northern Mariana Islands"),
                            ("Norway", "Norway"),
                            ("Oman", "Oman"),
                            ("Pakistan", "Pakistan"),
                            ("Palau", "Palau"),
                            ("Palestinian Territory", "Palestinian Territory"),
                            ("Panama", "Panama"),
                            ("Papua New Guinea", "Papua New Guinea"),
                            ("Paraguay", "Paraguay"),
                            ("Peru ", "Peru "),
                            ("Philippines", "Philippines"),
                            ("Pitcairn Islands", "Pitcairn Islands"),
                            ("Poland", "Poland"),
                            ("Portugal", "Portugal"),
                            ("Puerto Rico", "Puerto Rico"),
                            ("Qatar", "Qatar"),
                            ("Reunion", "Reunion"),
                            ("Romania", "Romania"),
                            ("Russia", "Russia"),
                            ("Rwanda", "Rwanda"),
                            ("Saint Helena", "Saint Helena"),
                            ("Saint Kitts and Nevis", "Saint Kitts and Nevis"),
                            ("Saint Lucia", "Saint Lucia"),
                            ("Saint Pierre and Miquelon", "Saint Pierre and Miquelon"),
                            (
                                "Saint Vincent and the Grenadines",
                                "Saint Vincent and the Grenadines",
                            ),
                            ("Samoa", "Samoa"),
                            ("San Marino", "San Marino"),
                            ("Sao Tome and Principe", "Sao Tome and Principe"),
                            ("Saudi Arabia", "Saudi Arabia"),
                            ("Senegal", "Senegal"),
                            ("Seychelles", "Seychelles"),
                            ("Sierra Leone", "Sierra Leone"),
                            ("Singapore", "Singapore"),
                            ("Slovakia", "Slovakia"),
                            ("Slovenia", "Slovenia"),
                            ("Soloman Islands", "Soloman Islands"),
                            ("Somalia", "Somalia"),
                            ("South Africa", "South Africa"),
                            ("South Korea", "South Korea"),
                            ("Spain", "Spain"),
                            ("Sri Lanka", "Sri Lanka"),
                            ("Sudan", "Sudan"),
                            ("Suriname", "Suriname"),
                            ("Swaziland", "Swaziland"),
                            ("Sweden", "Sweden"),
                            ("Switzerland", "Switzerland"),
                            ("Syria", "Syria"),
                            ("Taiwan", "Taiwan"),
                            ("Tajikistan", "Tajikistan"),
                            ("Tanzania", "Tanzania"),
                            ("Thailand", "Thailand"),
                            ("Togo", "Togo"),
                            ("Tokelau", "Tokelau"),
                            ("Tonga", "Tonga"),
                            ("Trinidad and Tobago", "Trinidad and Tobago"),
                            ("Tunisia", "Tunisia"),
                            ("Turkey", "Turkey"),
                            ("Turkmenistan", "Turkmenistan"),
                            ("Tuvalu", "Tuvalu"),
                            ("US Virgin Islands", "US Virgin Islands"),
                            ("Uganda", "Uganda"),
                            ("Ukraine", "Ukraine"),
                            ("United Arab Emirates", "United Arab Emirates"),
                            ("United Kingdom", "United Kingdom"),
                            ("Uruguay", "Uruguay"),
                            ("Uzbekistan", "Uzbekistan"),
                            ("Vanuatu", "Vanuatu"),
                            ("Vatican City", "Vatican City"),
                            ("Venezuela", "Venezuela"),
                            ("Vietnam", "Vietnam"),
                            ("Wallis and Futuna", "Wallis and Futuna"),
                            ("Western Sahara", "Western Sahara"),
                            ("Yemen", "Yemen"),
                            ("Yugoslavia", "Yugoslavia"),
                            ("Zambia", "Zambia"),
                            ("Zimbabwe", "Zimbabwe"),
                            ("Other", "Other"),
                        ],
                        help_text="Select one or more countries",
                        max_length=100,
                        verbose_name="Country",
                    ),
                ),
            ],
            options={"verbose_name": "Country",},
        ),
        migrations.CreateModel(
            name="Ecoregion",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "ecoregion",
                    models.CharField(
                        blank=True,
                        choices=[("TBD", "TBD")],
                        help_text="Select one or more Level III Ecoregions, if known",
                        max_length=100,
                        verbose_name="Ecoregion",
                    ),
                ),
            ],
            options={"verbose_name": "Ecoregion",},
        ),
        migrations.CreateModel(
            name="Effect",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "term",
                    models.CharField(
                        choices=[("TBD", "TBD")], max_length=100, verbose_name="Effect term"
                    ),
                ),
                (
                    "measure",
                    models.CharField(
                        choices=[("TBD", "TBD")], max_length=100, verbose_name="Effect measure"
                    ),
                ),
                (
                    "measure_detail",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Effect measure detail"
                    ),
                ),
                (
                    "species",
                    models.CharField(
                        blank=True,
                        help_text="Type the species name, if applicable; use the format Common name (Latin binomial)",
                        max_length=100,
                        verbose_name="Effect species",
                    ),
                ),
                (
                    "units",
                    models.CharField(
                        help_text="Type the unit associated with the effect term",
                        max_length=100,
                        verbose_name="Effect units",
                    ),
                ),
                (
                    "trajectory",
                    models.CharField(
                        choices=[
                            ("Increase", "Increase"),
                            ("Decrease", "Decrease"),
                            ("Change", "Change"),
                            ("No change", "No change"),
                            ("Other", "Other"),
                        ],
                        help_text="Select qualitative description of how the effect measure changes in response to the cause trajectory, if applicable",
                        max_length=100,
                        verbose_name="Effect trajectory",
                    ),
                ),
                (
                    "comment",
                    models.TextField(
                        blank=True,
                        help_text="Type any other useful information not captured in other fields",
                        verbose_name="Effect comment",
                    ),
                ),
                (
                    "as_reported",
                    models.TextField(
                        help_text="Copy and paste 1-2 sentences from article",
                        verbose_name="Effect as reported",
                    ),
                ),
                (
                    "modifying_factors",
                    models.CharField(
                        help_text="Type one or more factors that affect the relationship between the cause and effect",
                        max_length=100,
                        verbose_name="Modifying factors",
                    ),
                ),
                (
                    "sort",
                    models.CharField(
                        blank=True,
                        choices=[("TBD", "TBD")],
                        help_text="how do you want to sort multiple quantitative responses?",
                        max_length=100,
                        verbose_name="Sort quantitative responses",
                    ),
                ),
                (
                    "cause",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="eco.cause"
                    ),
                ),
            ],
            options={"verbose_name": "Effect/Response",},
        ),
        migrations.CreateModel(
            name="Reference",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("reference", models.CharField(help_text="Enter a Reference ID!", max_length=100)),
            ],
            options={"verbose_name": "Reference",},
        ),
        migrations.CreateModel(
            name="State",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "state",
                    models.CharField(
                        blank=True,
                        choices=[("TBD", "TBD")],
                        help_text="Select one or more states, if applicable",
                        max_length=100,
                        verbose_name="State",
                    ),
                ),
            ],
            options={"verbose_name": "State",},
        ),
        migrations.CreateModel(
            name="Quantitative",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "cause_level",
                    models.CharField(
                        blank=True,
                        help_text="Type the specific treatment/exposure/dose level of the cause measure",
                        max_length=100,
                        verbose_name="Cause treatment level",
                    ),
                ),
                (
                    "cause_level_units",
                    models.CharField(
                        blank=True,
                        help_text="Byron added this field - does this make sense?",
                        max_length=100,
                        verbose_name="Cause treatment level units",
                    ),
                ),
                (
                    "cause_level_value",
                    models.FloatField(
                        blank=True,
                        help_text="Byron added this field - does this make sense?",
                        null=True,
                        verbose_name="Cause treatment level value",
                    ),
                ),
                (
                    "sample_size",
                    models.IntegerField(
                        blank=True,
                        help_text="Type the number of samples used to calculate the response measure value, if known",
                        null=True,
                        verbose_name="Sample size",
                    ),
                ),
                (
                    "measure_type_filter",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Correlation coefficient", "Correlation coefficient"),
                            ("R-squared", "R-squared"),
                            ("Mean difference", "Mean difference"),
                            ("ANOVA/PERMANOVA", "ANOVA/PERMANOVA"),
                            ("Ratio", "Ratio"),
                            ("Slope coefficient (beta)", "Slope coefficient (beta)"),
                            ("Ordination", "Ordination"),
                            ("Threshold", "Threshold"),
                        ],
                        help_text="This drop down will filter the following field",
                        max_length=100,
                        verbose_name="Response measure type (filter)",
                    ),
                ),
                (
                    "measure_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Pearson", "Pearson"),
                            ("Spearman", "Spearman"),
                            ("Not specified", "Not specified"),
                            ("Simple linear", "Simple linear"),
                            ("Partial", "Partial"),
                            ("Multiple", "Multiple"),
                            ("Quantile", "Quantile"),
                            ("Not specified", "Not specified"),
                            ("Response ratio", "Response ratio"),
                            ("Odds ratio", "Odds ratio"),
                            ("Risk ratio", "Risk ratio"),
                            ("Hazard ratio", "Hazard ratio"),
                            ("Not specified", "Not specified"),
                            ("Non-standardized", "Non-standardized"),
                            ("Standardized", "Standardized"),
                            ("Not specified", "Not specified"),
                            ("Non-transformed data", "Non-transformed data"),
                            ("Transformed data", "Transformed data"),
                            ("Not specified", "Not specified"),
                            (
                                "Canonical correspondence analysis (CCA)",
                                "Canonical correspondence analysis (CCA)",
                            ),
                            (
                                "Principal components analysis (PCA)",
                                "Principal components analysis (PCA)",
                            ),
                            (
                                "Multiple discriminant analysis (MDA)",
                                "Multiple discriminant analysis (MDA)",
                            ),
                            (
                                "Non-multidimensional scaling (NMDS)",
                                "Non-multidimensional scaling (NMDS)",
                            ),
                            ("Factor analysis", "Factor analysis"),
                            ("Not specified", "Not specified"),
                            ("Regression tree", "Regression tree"),
                            ("Random forest", "Random forest"),
                            (
                                "Breakpoint (piecewise) regression",
                                "Breakpoint (piecewise) regression",
                            ),
                            ("Quantile regression", "Quantile regression"),
                            (
                                "Cumulative frequency distribution",
                                "Cumulative frequency distribution",
                            ),
                            ("Gradient forest analysis", "Gradient forest analysis"),
                            ("Non-linear curve fitting", "Non-linear curve fitting"),
                            ("Ordination", "Ordination"),
                            ("TITAN", "TITAN"),
                            ("Not specified", "Not specified"),
                        ],
                        help_text="Select one response measure type",
                        max_length=40,
                        verbose_name="Response measure type",
                    ),
                ),
                (
                    "measure_value",
                    models.FloatField(
                        blank=True,
                        help_text="Type the numerical value of the response measure",
                        null=True,
                        verbose_name="Response measure value",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Type any other useful information not captured in other fields",
                        verbose_name="Response measure description",
                    ),
                ),
                (
                    "variability",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("95% CI", "95% CI"),
                            ("90% CI", "90% CI"),
                            ("Standard deviation", "Standard deviation"),
                            ("Standard error", "Standard error"),
                            ("Not applicable", "Not applicable"),
                        ],
                        help_text="Select how variability in the response measure was reported, if applicable",
                        max_length=100,
                        verbose_name="Response variability",
                    ),
                ),
                (
                    "low_variability",
                    models.FloatField(
                        blank=True,
                        help_text="Type the lower numerical bound of the response variability",
                        null=True,
                        verbose_name="Lower response variability measure",
                    ),
                ),
                (
                    "upper_variability",
                    models.FloatField(
                        blank=True,
                        help_text="Type the upper numerical bound of the response variability",
                        null=True,
                        verbose_name="Upper response variability measure",
                    ),
                ),
                (
                    "statistical_sig_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("P-value", "P-value"),
                            ("F statistic", "F statistic"),
                            ("Chi square", "Chi square"),
                            ("Not applicable", "Not applicable"),
                        ],
                        help_text="Select the type of statistical significance measure reported",
                        max_length=100,
                        verbose_name="Statistical significance measure type",
                    ),
                ),
                (
                    "statistical_sig_value",
                    models.FloatField(
                        blank=True,
                        help_text="Type the numerical value of the statistical significance",
                        null=True,
                        verbose_name="Statistical significance measure value",
                    ),
                ),
                (
                    "derived_value",
                    models.FloatField(
                        blank=True,
                        help_text="Calculation from 'response measure value' based on a formula linked to 'response measure type', if applicable",
                        null=True,
                        verbose_name="Derived response measure value",
                    ),
                ),
                (
                    "effect",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="eco.effect"),
                ),
            ],
            options={"verbose_name": "Quantitative response information",},
        ),
        migrations.CreateModel(
            name="Metadata",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "study_type",
                    models.CharField(
                        choices=[
                            ("Observational/gradient", "Observational/gradient"),
                            ("Manipulation/experiment", "Manipulation/experiment"),
                            ("Simulation", "Simulation"),
                            ("Meta-analysis", "Meta-analysis"),
                            ("Review", "Review"),
                        ],
                        help_text="Select the type of study",
                        max_length=100,
                    ),
                ),
                (
                    "study_setting",
                    models.CharField(
                        choices=[
                            ("Field", "Field"),
                            ("Mesocosm", "Mesocosm"),
                            ("Greenhouse", "Greenhouse"),
                            ("Laboratory", "Laboratory"),
                            ("Model", "Model"),
                            ("Not applicable", "Not applicable"),
                        ],
                        help_text="Select the setting in which evidence was generated",
                        max_length=100,
                    ),
                ),
                (
                    "habitat",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Terrestrial", "Terrestrial"),
                            ("Riparian", "Riparian"),
                            ("Freshwater aquatic", "Freshwater aquatic"),
                            ("Estuarine", "Estuarine"),
                            ("Marine", "Marine"),
                        ],
                        help_text="Select the habitat to which the evidence applies",
                        max_length=100,
                        verbose_name="Habitat",
                    ),
                ),
                (
                    "habitat_terrestrial",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Forest", "Forest"),
                            ("Grassland", "Grassland"),
                            ("Desert", "Desert"),
                            ("Heathland", "Heathland"),
                            ("Agricultural", "Agricultural"),
                            ("Urban/suburban", "Urban/suburban"),
                            ("Tundra", "Tundra"),
                        ],
                        help_text="If you selected terrestrial, pick the type of terrestrial habitat",
                        max_length=100,
                        verbose_name="Terrestrial habitat",
                    ),
                ),
                (
                    "habitat_aquatic_freshwater",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Stream/river", "Stream/river"),
                            ("Wetland", "Wetland"),
                            ("Lake/reservoir", "Lake/reservoir"),
                        ],
                        help_text="If you selected freshwater, pick the type of freshwater habitat",
                        max_length=100,
                        verbose_name="Freshwater habitat",
                    ),
                ),
                (
                    "habitat_as_reported",
                    models.TextField(
                        blank=True,
                        help_text="Copy and paste 1-2 sentences from article",
                        verbose_name="Habitat as reported",
                    ),
                ),
                (
                    "climate_as_reported",
                    models.TextField(
                        blank=True,
                        help_text="Copy and paste from article",
                        verbose_name="Climate as reported",
                    ),
                ),
                (
                    "climate",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Select one or more climates to which the evidence applies",
                        to="eco.Climate",
                    ),
                ),
                (
                    "country",
                    models.ManyToManyField(
                        help_text="Select one or more countries", to="eco.Country"
                    ),
                ),
                (
                    "ecoregion",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Select one or more Level III Ecoregions, if known",
                        to="eco.Ecoregion",
                    ),
                ),
                (
                    "state",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Select one or more states, if applicable.",
                        to="eco.State",
                    ),
                ),
                (
                    "study_id",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="eco.reference"
                    ),
                ),
            ],
            options={"verbose_name": "Metadata",},
        ),
        migrations.AddField(
            model_name="cause",
            name="study_id",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="eco.reference"
            ),
        ),
    ]
